package com.example.Student_Library_Management_System.Service;

import com.example.Student_Library_Management_System.ENUMS.CardStatus;
import com.example.Student_Library_Management_System.Models.Card;
import com.example.Student_Library_Management_System.Models.Student;
import com.example.Student_Library_Management_System.Repository.StudentRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

@Service
public class StudentService {

    @Autowired
    StudentRepository studentRepository;

    public String createStudent(Student student){

        //Student from the postman is already the basic attributes set.

        //Card Should be autogenerated when createStudent function is called
        Card card = new Card();
        card.setCardStatus(CardStatus.ACTIVATED);  //Card status is being set.
        card.setStudentVariableName(student); //Foreign key attribute
        // Filling the value with the unidirectional part.

        //Let's go the student and set the card
        student.setCard(card);

        //If there was a unidirectional mapping : we had to save both of them
        //studentRepo.save () and cardRepo.save()

        //But we are super advance and are using bidirectional : Child will automatically be saved ,when we saved the student.

        studentRepository.save(student);
        //By cascading effect, child will automatically be saved (cardRepo will be saved)
        return "Student and Card added";

    }

    public  String findNameByEmail(String email){
      Student student = studentRepository.findByEmail(email);
      return student.getName();
    }

    public String updateMobileNo(Student newStudent){

        //First we will try to Fetch Original Student
        Student originalStudent = studentRepository.findById(newStudent.getId()).get();

        //We will keep the other properties as it is : and only change the required parameters
        originalStudent.setMobileNumber(newStudent.getMobileNumber());

        studentRepository.save(originalStudent);

        return "Mobile Number is Updated.";
    }
}
/*
    1. Existing Functions with no definition.
    2. Existing function + with defining.
    3. New Fuction
 */